{
  "$id": "/1-1-5/component.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Dynamic Component Description",
  "description": "A full description of a dynamic component in the AICA application framework.",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "title": "Schema",
      "description": "The reference to the schema",
      "examples": [
        "https://json-schema.org/draft/2020-12/schema"
      ],
      "type": "string"
    },
    "name": {
      "title": "Component Name",
      "description": "The human-readable name of the component.",
      "examples": [
        "Point Attractor",
        "Interactive Marker",
        "Weighted Sum"
      ],
      "type": "string"
    },
    "description": {
      "title": "Component Description",
      "description": "The human-readable description of this component and its behaviour.",
      "type": "object",
      "properties": {
        "brief": {
          "description": "A brief (one-line) description of the component for quick reference and tool-tips.",
          "examples": [
            "Generates a velocity command towards a target attractor"
          ],
          "type": "string"
        },
        "details": {
          "description": "An optional detailed description of the component.",
          "examples": [
            "Given an input Cartesian pose and parameterized target pose, this component generates a Cartesian twist output towards the target linearly proportional to the distance multiplied by the gain parameter."
          ],
          "type": "string"
        }
      },
      "required": [
        "brief"
      ]
    },
    "registration": {
      "$ref": "#/$defs/registration"
    },
    "inherits": {
      "$ref": "#/$defs/registration"
    },
    "lifecycle": {
      "title": "Lifecycle Component",
      "description": "If true, this property indicates that the component is a lifecycle component.",
      "type": "boolean",
      "default": false
    },
    "virtual": {
      "title": "Virtual Component Class",
      "description": "If true, this property indicates that the component is an abstract or virtual base class and not directly instantiable.",
      "type": "boolean",
      "default": false
    },
    "inputs": {
      "title": "Component Input Signals",
      "description": "The fixed input signals (subscriptions) of the component.",
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/aica-technology/api/main/schemas/signals/schema/signal.schema.json"
      },
      "uniqueItems": true
    },
    "input_collections": {
      "title": "Component Input Signal Collections",
      "description": "The dynamically assignable input signals (subscriptions) of the component.",
      "type": "array",
      "items": {
        "$ref": "signal_collection.schema.json"
      },
      "uniqueItems": true
    },
    "outputs": {
      "title": "Component Output Signals",
      "description": "The output signals (publications) of the component.",
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/aica-technology/api/main/schemas/signals/schema/signal.schema.json"
      },
      "uniqueItems": true
    },
    "parameters": {
      "title": "Component Parameters",
      "description": "The parameters declared by the component.",
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/aica-technology/api/main/schemas/parameters/schema/parameter.schema.json"
      },
      "uniqueItems": true
    },
    "predicates": {
      "title": "Component Predicates",
      "description": "The predicates provided by the component.",
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/aica-technology/api/main/schemas/predicates/schema/predicate.schema.json"
      },
      "uniqueItems": true
    },
    "services": {
      "title": "Component Services",
      "description": "The services provided by the component.",
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/aica-technology/api/main/schemas/services/schema/service.schema.json"
      },
      "uniqueItems": true
    }
  },
  "required": [
    "name",
    "description",
    "registration",
    "inherits"
  ],
  "$defs": {
    "registration": {
      "title": "Component Registration",
      "description": "The full registered class name of the exported component required for run-time loading. The registration must start with the package name and may include additional namespaces delimited by double colons `::`.",
      "type": "string",
      "examples": [
        "modulo_components::Component",
        "foo_package::other_namespace::Foo"
      ]
    }
  }
}